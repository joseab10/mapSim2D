<launch>

    <!--
    ###############################################################################################################
    #                                                                                                             #
    #    ARGUMENTS                                                                                                #
    #                                                                                                             #
    ###############################################################################################################
    -->
    <!-- ___________________________________________________________
        Main arguments
    ____________________________________________________________ -->
    <arg name="do_plots" default="true"/>
    <arg name="do_error" default="true"/>
    <arg name="do_gtmap" default="true"/>
    <arg name="do_odo" default="true"/>
    <arg name="do_rviz" default="true"/>


    <arg name="bag" default="10loop"
         doc="Bag file to be opened. If a specific file is to be desired, use the bag_file argument.
             Can take values of:
                 * 10loop: for the 10Loop Simulation ROSBag
                 * 10cell: for the 10Cell Simulation ROSBag"/>

    <arg name="mm" default="refl"
         doc="Map Model.
         Can take values of
             * ref for Reflection Map or
             * dec for Exponential Decay Map."/>

    <arg name="pw" default="cmh"
         doc="Particle weighting method.
         Can take values of
             * cmh for Closest Mean Hit,
             * fsm for Forward Sensor Model and
             * ml  for Measurement Likelihood."/>

    <!-- Pseudo parsing to booleans-->
    <arg name="mm_dcy" value="$(eval mm.lower() == 'dcy')"/>

    <arg name="pw_fsm" value="$(eval pw.lower() == 'fsm')"/>
    <arg name="pw_ml" value="$(eval pw.lower() == 'ml' )"/>
    <arg name="pw_cmh" value="$(eval (pw.lower() == 'cmh' or
                                                ( not pw_fsm and
                                                  not pw_ml)
                                               ))"/>

    <arg name="alpha0" default="1" />
    <arg name="beta0" default="1" unless="$(arg mm_dcy)"/>
    <arg name="beta0" default="0" if="$(arg mm_dcy)"/>

    <arg name="exp_pfx" default="exp"/>

    <arg name="resolution" default="0.025"/>

    <arg name="occ_threshold" default="0.25"/>

    <arg name="pause" default="false"/>

    <!-- ___________________________________________________________
        Path Arguments / Variables
    ____________________________________________________________ -->
    <!-- Package Path -->
    <arg name="path_pk" value="$(find map_simulator)"/>
    <!-- URDF Robot Descriptor Path -->
    <arg name="path_urdf" value="$(arg path_pk)/urdf"/>
    <!-- Configuration Files Path -->
    <arg name="path_cfg" value="$(arg path_pk)/cfg"/>
    <arg name="path_cfg_rviz" value="$(arg path_cfg)/rviz"/>
    <arg name="cfg_rviz_file" default="$(arg path_cfg_rviz)/experiment.rviz"/>
    <!-- Data-sets Path -->
    <arg name="path_data" value="$(find slam_datasets)"/>
    <!-- Save files Path -->
    <arg name="ts" default="880910_052410"/>
    <arg name="pfx_mm" value="$(eval 'dcy' if mm_dcy else 'rfl')"/>
    <arg name="pfx_pw" value="$(eval 'fsm' if pw_fsm else ('ml' if pw_ml else 'cmh'))"/>
    <arg name="path_save"
         default="$(env HOME)/Desktop/Experiments/$(arg exp_pfx)_$(arg pfx_mm)_$(arg pfx_pw)_$(arg ts)"/>
    <arg name="path_save_img" default="$(arg path_save)/img"/>
    <arg name="path_save_occ" default="$(arg path_save)/img/occ"/>
    <arg name="path_save_err" default="$(arg path_save)/err"/>

    <arg name="bag_file" default="$(arg path_data)/Simulations/Robot_10Loop_noisy_3_2pi_180rays.bag"
         if="$(eval bag == '10loop')"/>
    <arg name="bag_file" default="$(arg path_data)/Simulations/Robot_10Cell_noisy_3_2pi_180rays.bag"
         if="$(eval bag == '10cell')"/>


     <!--
    ###############################################################################################################
    #                                                                                                             #
    #    GLOBAL PARAMETERS                                                                                        #
    #                                                                                                             #
    ###############################################################################################################
    -->
    <param name="use_sim_time" value="true"/>

    <!-- URDF Robot Descriptor files for RVIZ -->
    <param name="robot_urdf_odo" textfile="$(arg path_urdf)/simple_robot_red.urdf" if="$(arg do_rviz)"/>
    <param name="robot_urdf_gt" textfile="$(arg path_urdf)/simple_robot_green.urdf" if="$(arg do_rviz)"/>
    <param name="robot_urdf_slam" textfile="$(arg path_urdf)/simple_robot_blue.urdf" if="$(arg do_rviz)"/>

     <!--
    ###############################################################################################################
    #                                                                                                             #
    #    NODES                                                                                                    #
    #                                                                                                             #
    ###############################################################################################################
    -->
    <node pkg="gmapping" type="slam_gmapping" name="slam" output="log">
        <!--
        =========================================================================================================
            Topic Remaps
        =========================================================================================================
        -->
        <remap from="scan" to="base_scan"/>

        <!--
        =========================================================================================================
            Parameters
        =========================================================================================================
        -->
        <!-- ___________________________________________________________
            TF Frames
        ____________________________________________________________ -->
        <!-- The frame attached to the map. (string, default "map") -->
        <param name="map_frame" value="map"/>
        <!-- The frame attached to the odometry system. (string, default "odom") -->
        <param name="odom_frame" value="odom"/>
        <!-- The frame attached to the mobile base. (string, default "base_link") -->
        <param name="base_frame" value="base_link"/>

        <!-- ____________________________________________________________
             Map Parameters
             ____________________________________________________________ -->
        <!-- Initial map size (in metres) -->
        <param name="xmin" value="-6.0"/> <!-- (float, default -100.0) -->
        <param name="ymin" value="-6.0"/> <!-- (float, default -100.0) -->
        <param name="xmax" value="6.0"/>  <!-- (float, default  100.0) -->
        <param name="ymax" value="6.0"/>  <!-- (float, default  100.0) -->
        <!-- Resolution of the map (in metres per occupancy grid block) (float, default 0.05) -->
        <param name="delta" value="($arg resolution)"/>

        <!-- Threshold for determining the occupancy value of each cell -->
        <param name="occ_thresh" value="$(arg occ_threshold)"/>

        <!-- ____________________________________________________________
             Measurement Model Parameters
        ____________________________________________________________ -->
        <!-- The maximum range of the sensor. If regions with no obstacles within the range of the sensor should appear
             as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange. (float) -->
        <param name="maxRange" value="90.0"/>
        <!-- The maximum usable range of the laser. A beam is cropped to this value. (float, default 80.0) -->
        <param name="maxUrange" value="80.0"/>

        <!-- ____________________________________________________________
             Odometry Model Parameters
             ____________________________________________________________ -->
        <!-- Odometry error in translation as a function of translation (rho/rho) (float, default 0.1) -->
        <param name="srr" value="0.1"/>
        <!-- Odometry error in translation as a function of rotation (rho/theta) (float, default 0.2) -->
        <param name="srt" value="0.2"/>
        <!-- Odometry error in rotation as a function of translation (theta/rho) (float, default 0.1) -->
        <param name="str" value="0.1"/>
        <!-- Odometry error in rotation as a function of rotation (theta/theta) (float, default 0.2) -->
        <param name="stt" value="0.2"/>

        <!-- ____________________________________________________________
             Scan Matcher Parameters
             ____________________________________________________________ -->
        <!-- The sigma used by the greedy endpoint matching (float, default 0.05) -->
        <param name="sigma" value="0.05"/>
        <!-- The kernel in which to look for a correspondence (int, default 1) -->
        <param name="kernelSize" value="1"/>

        <!-- The optimization step in translation (float, default 0.05) -->
        <param name="lstep" value="0.05"/>
        <!-- The optimization step in rotation (float, default 0.05) -->
        <param name="astep" value="0.05"/>

        <!-- The number of iterations of the scanmatcher (int, default 5) -->
        <param name="iterations" value="5"/>
        <!-- The sigma of a beam used for likelihood computation (float, default 0.075) -->
        <param name="lsigma" value="0.075"/>

        <!-- Gain to be used while evaluating the likelihood, for smoothing the resampling
        effects (float, default 3.0) -->
        <param name="ogain" value="3.0"/>
        <!-- Number of beams to skip in each scan. Take only every (n+1)th laser ray for computing a match
        (0 = take all rays) (int, default 0) -->
        <param name="lskip" value="0"/>
        <!-- Minimum score for considering the outcome of the scan matching good. Can avoid jumping pose estimates in
        large open spaces when using laser scanners with limited range (e.g. 5m). Scores go up to 600+, try 50 for example
        when experiencing jumping estimate issues. (float, default 0.0) -->
        <param name="minimumScore" value="0.0"/>

        <!-- ____________________________________________________________
             Update Parameters
             ____________________________________________________________ -->
        <!-- Process a scan each time the robot translates this far (float, default 1.0) -->
        <param name="linearUpdate" value="1.0" /> <!-- 0.20"/> -->
        <!-- Process a scan each time the robot rotates this far (float, default 0.5) -->
        <param name="angularUpdate" value="0.5"/>
        <!-- Process a scan if the last scan processed is older than the update time in seconds. A value less than zero
        will turn time based updates off. (float, default: -1.0) -->
        <param name="temporalUpdate" value="-1.0"/>

        <!-- How long (in seconds) between updates to the map. Lowering this number updates the occupancy grid more
             often, at the expense of greater computational load. (float, default 5.0) -->
        <param name="map_update_interval" value="5.0" /> <!-- 0.25"/> -->

        <!-- How long (in seconds) between transform publications. To disable broadcasting transforms, set to 0.
        (float, default 0.05) -->
        <param name="transform_publish_period" value="0.05"/>
        <!-- Threshold on gmapping's occupancy values. Cells with greater occupancy are considered occupied (i.e., set to
        100 in the resulting sensor_msgs/LaserScan). New in 1.1.0.  (float, default 0.25) -->


        <!-- ____________________________________________________________
             Particle Filter Parameters
             ____________________________________________________________ -->
        <!-- Number of particles in the filter (int, default 30) -->
        <param name="particles" value="30"/>
        <!-- The Neff based resampling threshold (float, default 0.5) -->
        <param name="resampleThreshold" value="0.5"/>

        <!-- Translational sampling range for the likelihood (float, default 0.01) -->
        <param name="llsamplerange" value="0.01"/>
        <!-- Translational sampling step for the likelihood (float, default 0.01) -->
        <param name="llsamplestep" value="0.01"/>
        <!-- Angular sampling range for the likelihood (float, default 0.005) -->
        <param name="lasamplerange" value="0.005"/>
        <!-- Angular sampling step for the likelihood (float, default 0.005) -->
        <param name="lasamplestep" value="0.005"/>

        <!-- ____________________________________________________________
             Full Map Posterior Parameters
        ____________________________________________________________ -->

        <param name="mapModel" value="ReflectionModel" unless="$(arg mm_dcy)"/>
        <param name="mapModel" value="ExpDecayModel" if="$(arg mm_dcy)"/>

        <param name="partWeighting" value="ClosestMeanHitLikelihood" if="$(arg pw_cmh)"/>
        <param name="partWeighting" value="ForwardSensorModel" if="$(arg pw_fsm)"/>
        <param name="partWeighting" value="MeasurementLikelihood" if="$(arg pw_ml)"/>


        <param name="publishFullPosterior" value="true" />

        <param name="alpha0" value="$(arg alpha0)"/>
        <param name="beta0" value="$(arg beta0)"/>


    </node>


    <node name="fmp_plot" pkg="map_simulator" type="fmp_plot" output="log" if="$(arg do_plots)">
        <param name="save_dir" value="$(arg path_save_img)"/>

        <param name="pub_img" value="false"/>
        <param name="save_img" value="true"/>

        <param name="img_stat" value="true"/>
        <param name="img_mlm" value="true"/>
        <param name="img_para" value="true"/>
    </node>

    <node name="gt_map" pkg="map_simulator" type="gt_mapping" output="log" if="$(arg do_gtmap)">
        <param name="occ_threshold" value="$(arg occ_threshold)"/>
    </node>

    <node name="odom_map" pkg="map_simulator" type="gt_mapping" output="log" if="$(arg do_odo)">
        <remap from="/GT/base_scan" to="/odo/base_scan"/>
        <remap from="/GT/map" to="/odo/map"/>

        <param name="occ_threshold" value="$(arg occ_threshold)"/>
        <param name="gt_prefix" value="odo"/>
        <param name="pose_origin_frame" value="odom"/>
        <param name="laser_frame" value="laser_link"/>
    </node>

    <!-- ________________________________________________________________________________
        Occupancy Map Image Savers
    _________________________________________________________________________________ -->

    <node name="occ_map_saver" pkg="map_simulator" type="occ_map_saver" output="log" if="$(arg do_plots)">
        <param name="file_prefix" value="map"/>
        <param name="save_dir" value="$(arg path_save_occ)"/>
    </node>

    <node name="gt_occ_map_saver" pkg="map_simulator" type="occ_map_saver" output="log"
          if="$(eval do_plots and do_gtmap)">
        <remap from="map" to="/GT/map"/>

        <param name="file_prefix" value="gt_map"/>
        <param name="save_dir" value="$(arg path_save_occ)"/>
    </node>

    <node name="odo_occ_map_saver" pkg="map_simulator" type="occ_map_saver" output="log"
          if="$(eval do_plots and do_odo)">
        <remap from="map" to="/odo/map"/>

        <param name="file_prefix" value="odo_map"/>
        <param name="save_dir" value="$(arg path_save_occ)"/>
    </node>

    <node name="pose_err" pkg="map_simulator" type="pose_error_calc" output="log" if="$(arg do_error)">
        <param name="log_err" value="true"/>
        <param name="log_dir" value="$(arg path_save_err)"/>
        <param name="err_prefix" value="pose_error"/>
    </node>

    <node name="rviz" pkg="rviz" type="rviz" respawn="true"
          args="-d $(arg cfg_rviz_file)" if="$(arg do_rviz)"/>

    <node name="sim" pkg="rosbag" type="play" output="screen" args="--clock --pause $(arg bag_file)" if="$(arg pause)"/>
    <node name="sim" pkg="rosbag" type="play" output="screen" args="--clock $(arg bag_file)" unless="$(arg pause)"/>

</launch>
